{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}

[build-system]
requires = [
    "setuptools",
    "setuptools_scm[toml]",
    "wheel",
    "keyring",
    "keyrings.google-artifactregistry-auth"
]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.package_slug }}"
version = "{{ cookiecutter.version }}"
description = "attr: {{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">=3.10, <=3.12"
keywords = ["{{ cookiecutter.package_slug }}"]
license = { text = "{{ cookiecutter.open_source_license }}" }
authors = [
    { name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" }
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    {%- if cookiecutter.open_source_license in license_classifiers %}
    "{{ license_classifiers[cookiecutter.open_source_license] }}",
    {%- endif %}
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
urls = {
    "Documentation" = "https://{{ cookiecutter.project_slug }}.hakancelik.dev/",
    "Issues" = "https://github.com/hakancelikdev/{{ cookiecutter.project_slug }}/issues/",
    "Changelog" = "https://{{ cookiecutter.project_slug }}.hakancelik.dev/changelog"
}
dependencies = [

]

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-cov"
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-markdownextradata-plugin",
    "mkdocs-minify-plugin",
    "mkdocs-git-revision-date-localized-plugin",
    "mike"
]

[tool.setuptools]
package-dir = { "" = "src" }
packages = ["{{ cookiecutter.package_slug }}"]
include-package-data = true
zip-safe = true

[tool.setuptools.package-data]
"*" = ["py.typed"]
